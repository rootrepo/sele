package com.rootrepo.excelutil;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.ConcurrentHashMap;

import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.rootrepo.exception.SeleLibException;
import com.rootrepo.pojo.InstructionPojo;


public class ExcelDriver {

	static Logger logger = LoggerFactory.getLogger(ExcelDriver.class);
	public static void getDataFromFile(String fullPathToFile, String returnFormat){
		
		if (fullPathToFile.endsWith("xlsx"))
			getDataFromFileXLSX(fullPathToFile, returnFormat);
		else
			if (fullPathToFile.endsWith("xls"))
				getDataFromFileXLS(fullPathToFile, returnFormat);
	}
	
	public static void getDataFromFileXLS(String fullPathToFile,String returnFormat) {

		
	}

	public static void getDataFromFileXLSX(String fullPathToFile, String returnFormat) {
		
		FileInputStream xlsxFileInputStream = null;
		try {
			xlsxFileInputStream = new FileInputStream(new File(fullPathToFile));
			
		} catch (FileNotFoundException e) {
			SeleLibException libException = new SeleLibException("FileNotFoundException path not valid : "+ fullPathToFile);
			libException.addSuppressed(e);
			logger.error(e.getMessage()+"",libException);
			//e.addSuppressed(new SeleLibException("FileNotFoundException path not valid : "+ fullPathToFile));
			//e.printStackTrace();
			
		}
		
		
		if(returnFormat.equalsIgnoreCase("LIST") )
			getDataFromFileXLSXAsLIST(xlsxFileInputStream);
		
		finally{
			if(xlsxFileInputStream != null)
				try {
					xlsxFileInputStream.close();
				} catch (IOException e) {
					SeleLibException libException = new SeleLibException("Exception while closing file Input Stream"+ fullPathToFile);
					libException.addSuppressed(e);
					logger.error(e.getMessage()+"",libException);
					//e.printStackTrace();
				}
		}
	}
	
	//public static List 

	public static void getDataFromFileXLSXAsLIST(FileInputStream xlsxFileInputStream) {
	

		XSSFWorkbook workbook = null;
		try {
			workbook = new XSSFWorkbook(xlsxFileInputStream);
		} catch (IOException e) {
			SeleLibException libException = new SeleLibException("Exception while Reading file Inputsteam");
			libException.addSuppressed(e);
			logger.error(e.getMessage()+"",libException);
			//e.printStackTrace();
		}
		Iterator<Sheet> sheetIterator = workbook.iterator();
		List<InstructionPojo> instructionPojos = new ArrayList<>();
		int sheetCount = 0;
		ConcurrentHashMap<String, List<InstructionPojo>> instructionsHashMap = new ConcurrentHashMap<>();
		while (sheetIterator.hasNext()) {
			Sheet sheet = (Sheet) sheetIterator.next();
			instructionsHashMap.put("sheet"+sheetCount, value)
		}
		
	}

	public static void main(String[] argv) {
		getDataFromFileXLSX("xlsx", "test");
	}
}
